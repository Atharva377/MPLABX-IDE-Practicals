

Microchip Technology PIC18 LITE Macro Assembler V1.30 build 55553 
                                                                                               Mon Jun 05 10:02:14 2023

Microchip Technology Omniscient Code Generator (Lite mode) build 55553
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    15                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    16  0000                     
    17                           	psect	idataCOMRAM
    18  0008FE                     __pidataCOMRAM:
    19                           	opt stack 0
    20                           
    21                           ;initializer for _string1
    22  0008FE  0801               	dw	STR_1& (0+65535)
    23                           
    24                           ;initializer for _string2
    25  000900  0808               	dw	STR_2& (0+65535)
    26  0000                     _LATCbits	set	3979
    27  0000                     _PORTB	set	3969
    28  0000                     _TRISB	set	3987
    29  0000                     _TRISCbits	set	3988
    30                           
    31                           	psect	smallconst
    32  000800                     __psmallconst:
    33                           	opt stack 0
    34  000800  00                 	db	0
    35  000801                     __stringdata:
    36                           	opt stack 0
    37  000801                     STR_1:
    38  000801  41                 	db	65	;'A'
    39  000802  49                 	db	73	;'I'
    40  000803  53                 	db	83	;'S'
    41  000804  53                 	db	83	;'S'
    42  000805  4D                 	db	77	;'M'
    43  000806  53                 	db	83	;'S'
    44  000807  00                 	db	0
    45  000808                     STR_2:
    46  000808  49                 	db	73	;'I'
    47  000809  4F                 	db	79	;'O'
    48  00080A  49                 	db	73	;'I'
    49  00080B  54                 	db	84	;'T'
    50  00080C  00                 	db	0
    51  00080D                     __end_of__stringdata:
    52                           	opt stack 0
    53  00080D  00                 	db	0	; dummy byte at the end
    54  0000                     
    55                           ; #config settings
    56                           
    57                           	psect	cinit
    58  000888                     __pcinit:
    59                           	opt stack 0
    60  000888                     start_initialization:
    61                           	opt stack 0
    62  000888                     __initialization:
    63                           	opt stack 0
    64                           
    65                           ; Initialize objects allocated to COMRAM (4 bytes)
    66                           ; load TBLPTR registers with __pidataCOMRAM
    67  000888  0EFE               	movlw	low __pidataCOMRAM
    68  00088A  6EF6               	movwf	tblptrl,c
    69  00088C  0E08               	movlw	high __pidataCOMRAM
    70  00088E  6EF7               	movwf	tblptrh,c
    71  000890  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
    72  000892  6EF8               	movwf	tblptru,c
    73  000894  EE00  F001         	lfsr	0,__pdataCOMRAM
    74  000898  EE10 F004          	lfsr	1,4
    75  00089C                     copy_data0:
    76  00089C  0009               	tblrd		*+
    77  00089E  CFF5 FFEE          	movff	tablat,postinc0
    78  0008A2  50E5               	movf	postdec1,w,c
    79  0008A4  50E1               	movf	fsr1l,w,c
    80  0008A6  E1FA               	bnz	copy_data0
    81  0008A8                     end_of_initialization:
    82                           	opt stack 0
    83  0008A8                     __end_of__initialization:
    84                           	opt stack 0
    85  0008A8  0E00               	movlw	low (__Lsmallconst shr (0+16))
    86  0008AA  6EF8               	movwf	tblptru,c
    87  0008AC  0E08               	movlw	high __Lsmallconst
    88  0008AE  6EF7               	movwf	tblptrh,c
    89  0008B0  0100               	movlb	0
    90  0008B2  EF07  F004         	goto	_main	;jump to C main() function
    91                           tblptru	equ	0xFF8
    92                           tblptrh	equ	0xFF7
    93                           tblptrl	equ	0xFF6
    94                           tablat	equ	0xFF5
    95                           postinc0	equ	0xFEE
    96                           postdec1	equ	0xFE5
    97                           fsr1l	equ	0xFE1
    98                           
    99                           	psect	dataCOMRAM
   100  000001                     __pdataCOMRAM:
   101                           	opt stack 0
   102  000001                     _string1:
   103                           	opt stack 0
   104  000001                     	ds	2
   105  000003                     _string2:
   106                           	opt stack 0
   107  000003                     	ds	2
   108                           tblptru	equ	0xFF8
   109                           tblptrh	equ	0xFF7
   110                           tblptrl	equ	0xFF6
   111                           tablat	equ	0xFF5
   112                           postinc0	equ	0xFEE
   113                           postdec1	equ	0xFE5
   114                           fsr1l	equ	0xFE1
   115                           
   116                           	psect	cstackCOMRAM
   117  000005                     __pcstackCOMRAM:
   118                           	opt stack 0
   119  000005                     delay@i:
   120                           	opt stack 0
   121                           
   122                           ; 2 bytes @ 0x0
   123  000005                     	ds	2
   124  000007                     send_instruction@command:
   125                           	opt stack 0
   126  000007                     send_data@data:
   127                           	opt stack 0
   128                           
   129                           ; 1 bytes @ 0x2
   130  000007                     	ds	1
   131  000008                     tblptru	equ	0xFF8
   132                           tblptrh	equ	0xFF7
   133                           tblptrl	equ	0xFF6
   134                           tablat	equ	0xFF5
   135                           postinc0	equ	0xFEE
   136                           postdec1	equ	0xFE5
   137                           fsr1l	equ	0xFE1
   138                           
   139                           ; 0 bytes @ 0x3
   140 ;;
   141 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   142 ;;
   143 ;; *************** function _main *****************
   144 ;; Defined at:
   145 ;;		line 29 in file "lcd.c"
   146 ;; Parameters:    Size  Location     Type
   147 ;;		None
   148 ;; Auto vars:     Size  Location     Type
   149 ;;		None
   150 ;; Return value:  Size  Location     Type
   151 ;;		None               void
   152 ;; Registers used:
   153 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   154 ;; Tracked objects:
   155 ;;		On entry : 0/0
   156 ;;		On exit  : 0/0
   157 ;;		Unchanged: 0/0
   158 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   159 ;;      Params:         0       0       0       0       0       0       0       0       0
   160 ;;      Locals:         0       0       0       0       0       0       0       0       0
   161 ;;      Temps:          0       0       0       0       0       0       0       0       0
   162 ;;      Totals:         0       0       0       0       0       0       0       0       0
   163 ;;Total ram usage:        0 bytes
   164 ;; Hardware stack levels required when called:    2
   165 ;; This function calls:
   166 ;;		_send_data
   167 ;;		_send_instruction
   168 ;; This function is called by:
   169 ;;		Startup code after reset
   170 ;; This function uses a non-reentrant model
   171 ;;
   172                           
   173                           	psect	text0
   174  00080E                     __ptext0:
   175                           	opt stack 0
   176  00080E                     _main:
   177                           	opt stack 29
   178                           
   179                           ;lcd.c: 30: TRISB=0;
   180                           
   181                           ;incstack = 0
   182  00080E  0E00               	movlw	0
   183  000810  6E93               	movwf	3987,c	;volatile
   184                           
   185                           ;lcd.c: 31: TRISCbits.RC0=0;
   186  000812  9094               	bcf	3988,0,c	;volatile
   187                           
   188                           ;lcd.c: 32: TRISCbits.RC1=0;
   189  000814  9294               	bcf	3988,1,c	;volatile
   190                           
   191                           ;lcd.c: 33: send_instruction(0X38);
   192  000816  0E38               	movlw	56
   193  000818  EC6B  F004         	call	_send_instruction
   194                           
   195                           ;lcd.c: 34: send_instruction(0X06);
   196  00081C  0E06               	movlw	6
   197  00081E  EC6B  F004         	call	_send_instruction
   198                           
   199                           ;lcd.c: 35: send_instruction(0X0C);
   200  000822  0E0C               	movlw	12
   201  000824  EC6B  F004         	call	_send_instruction
   202                           
   203                           ;lcd.c: 36: send_instruction(0X01);
   204  000828  0E01               	movlw	1
   205  00082A  EC6B  F004         	call	_send_instruction
   206                           
   207                           ;lcd.c: 37: send_instruction(0X80);
   208  00082E  0E80               	movlw	128
   209  000830  EC6B  F004         	call	_send_instruction
   210                           
   211                           ;lcd.c: 39: while(*string1){
   212  000834  D00A               	goto	l666
   213  000836                     l662:
   214                           
   215                           ;lcd.c: 40: send_data(*string1);
   216  000836  C001  FFF6         	movff	_string1,tblptrl
   217  00083A  C002  FFF7         	movff	_string1+1,tblptrh
   218  00083E  0008               	tblrd		*
   219  000840  50F5               	movf	tablat,w,c
   220  000842  EC75  F004         	call	_send_data
   221                           
   222                           ;lcd.c: 41: string1++;
   223  000846  4A01               	infsnz	_string1,f,c
   224  000848  2A02               	incf	_string1+1,f,c
   225  00084A                     l666:
   226  00084A  C001  FFF6         	movff	_string1,tblptrl
   227  00084E  C002  FFF7         	movff	_string1+1,tblptrh
   228  000852  0008               	tblrd		*
   229  000854  50F5               	movf	tablat,w,c
   230  000856  0900               	iorlw	0
   231  000858  B4D8               	btfsc	status,2,c
   232  00085A  D00B               	goto	l672
   233  00085C  D7EC               	goto	l662
   234  00085E                     l668:
   235                           
   236                           ;lcd.c: 44: send_data(*string2);
   237  00085E  C003  FFF6         	movff	_string2,tblptrl
   238  000862  C004  FFF7         	movff	_string2+1,tblptrh
   239  000866  0008               	tblrd		*
   240  000868  50F5               	movf	tablat,w,c
   241  00086A  EC75  F004         	call	_send_data
   242                           
   243                           ;lcd.c: 45: string2++;
   244  00086E  4A03               	infsnz	_string2,f,c
   245  000870  2A04               	incf	_string2+1,f,c
   246  000872                     l672:
   247  000872  C003  FFF6         	movff	_string2,tblptrl
   248  000876  C004  FFF7         	movff	_string2+1,tblptrh
   249  00087A  0008               	tblrd		*
   250  00087C  50F5               	movf	tablat,w,c
   251  00087E  0900               	iorlw	0
   252  000880  A4D8               	btfss	status,2,c
   253  000882  D7ED               	goto	l668
   254  000884  EF00  F000         	goto	start
   255  000888                     __end_of_main:
   256                           	opt stack 0
   257                           tblptru	equ	0xFF8
   258                           tblptrh	equ	0xFF7
   259                           tblptrl	equ	0xFF6
   260                           tablat	equ	0xFF5
   261                           postinc0	equ	0xFEE
   262                           postdec1	equ	0xFE5
   263                           fsr1l	equ	0xFE1
   264                           status	equ	0xFD8
   265                           
   266 ;; *************** function _send_instruction *****************
   267 ;; Defined at:
   268 ;;		line 13 in file "lcd.c"
   269 ;; Parameters:    Size  Location     Type
   270 ;;  command         1    wreg     unsigned char 
   271 ;; Auto vars:     Size  Location     Type
   272 ;;  command         1    2[COMRAM] unsigned char 
   273 ;; Return value:  Size  Location     Type
   274 ;;		None               void
   275 ;; Registers used:
   276 ;;		wreg, status,2, status,0, cstack
   277 ;; Tracked objects:
   278 ;;		On entry : 0/0
   279 ;;		On exit  : 0/0
   280 ;;		Unchanged: 0/0
   281 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   282 ;;      Params:         0       0       0       0       0       0       0       0       0
   283 ;;      Locals:         1       0       0       0       0       0       0       0       0
   284 ;;      Temps:          0       0       0       0       0       0       0       0       0
   285 ;;      Totals:         1       0       0       0       0       0       0       0       0
   286 ;;Total ram usage:        1 bytes
   287 ;; Hardware stack levels used:    1
   288 ;; Hardware stack levels required when called:    1
   289 ;; This function calls:
   290 ;;		_delay
   291 ;; This function is called by:
   292 ;;		_main
   293 ;; This function uses a non-reentrant model
   294 ;;
   295                           
   296                           	psect	text1
   297  0008D6                     __ptext1:
   298                           	opt stack 0
   299  0008D6                     _send_instruction:
   300                           	opt stack 29
   301                           
   302                           ;incstack = 0
   303                           ;send_instruction@command stored from wreg
   304  0008D6  CFE8 F007          	movff	wreg,send_instruction@command
   305                           
   306                           ;lcd.c: 14: LATCbits.LATC0=0;
   307  0008DA  908B               	bcf	3979,0,c	;volatile
   308                           
   309                           ;lcd.c: 15: PORTB=command;
   310  0008DC  C007  FF81         	movff	send_instruction@command,3969	;volatile
   311                           
   312                           ;lcd.c: 16: LATCbits.LATC1=1;
   313  0008E0  828B               	bsf	3979,1,c	;volatile
   314                           
   315                           ;lcd.c: 17: delay();
   316  0008E2  EC5B  F004         	call	_delay	;wreg free
   317                           
   318                           ;lcd.c: 18: LATCbits.LATC1=0;
   319  0008E6  928B               	bcf	3979,1,c	;volatile
   320  0008E8  0012               	return	
   321  0008EA                     __end_of_send_instruction:
   322                           	opt stack 0
   323                           tblptru	equ	0xFF8
   324                           tblptrh	equ	0xFF7
   325                           tblptrl	equ	0xFF6
   326                           tablat	equ	0xFF5
   327                           postinc0	equ	0xFEE
   328                           wreg	equ	0xFE8
   329                           postdec1	equ	0xFE5
   330                           fsr1l	equ	0xFE1
   331                           status	equ	0xFD8
   332                           
   333 ;; *************** function _send_data *****************
   334 ;; Defined at:
   335 ;;		line 21 in file "lcd.c"
   336 ;; Parameters:    Size  Location     Type
   337 ;;  data            1    wreg     unsigned char 
   338 ;; Auto vars:     Size  Location     Type
   339 ;;  data            1    2[COMRAM] unsigned char 
   340 ;; Return value:  Size  Location     Type
   341 ;;		None               void
   342 ;; Registers used:
   343 ;;		wreg, status,2, status,0, cstack
   344 ;; Tracked objects:
   345 ;;		On entry : 0/0
   346 ;;		On exit  : 0/0
   347 ;;		Unchanged: 0/0
   348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   349 ;;      Params:         0       0       0       0       0       0       0       0       0
   350 ;;      Locals:         1       0       0       0       0       0       0       0       0
   351 ;;      Temps:          0       0       0       0       0       0       0       0       0
   352 ;;      Totals:         1       0       0       0       0       0       0       0       0
   353 ;;Total ram usage:        1 bytes
   354 ;; Hardware stack levels used:    1
   355 ;; Hardware stack levels required when called:    1
   356 ;; This function calls:
   357 ;;		_delay
   358 ;; This function is called by:
   359 ;;		_main
   360 ;; This function uses a non-reentrant model
   361 ;;
   362                           
   363                           	psect	text2
   364  0008EA                     __ptext2:
   365                           	opt stack 0
   366  0008EA                     _send_data:
   367                           	opt stack 29
   368                           
   369                           ;incstack = 0
   370                           ;send_data@data stored from wreg
   371  0008EA  CFE8 F007          	movff	wreg,send_data@data
   372                           
   373                           ;lcd.c: 22: LATCbits.LATC0=1;
   374  0008EE  808B               	bsf	3979,0,c	;volatile
   375                           
   376                           ;lcd.c: 23: PORTB=data;
   377  0008F0  C007  FF81         	movff	send_data@data,3969	;volatile
   378                           
   379                           ;lcd.c: 24: LATCbits.LATC1=1;
   380  0008F4  828B               	bsf	3979,1,c	;volatile
   381                           
   382                           ;lcd.c: 25: delay();
   383  0008F6  EC5B  F004         	call	_delay	;wreg free
   384                           
   385                           ;lcd.c: 26: LATCbits.LATC1=0;
   386  0008FA  928B               	bcf	3979,1,c	;volatile
   387  0008FC  0012               	return	
   388  0008FE                     __end_of_send_data:
   389                           	opt stack 0
   390                           tblptru	equ	0xFF8
   391                           tblptrh	equ	0xFF7
   392                           tblptrl	equ	0xFF6
   393                           tablat	equ	0xFF5
   394                           postinc0	equ	0xFEE
   395                           wreg	equ	0xFE8
   396                           postdec1	equ	0xFE5
   397                           fsr1l	equ	0xFE1
   398                           status	equ	0xFD8
   399                           
   400 ;; *************** function _delay *****************
   401 ;; Defined at:
   402 ;;		line 7 in file "lcd.c"
   403 ;; Parameters:    Size  Location     Type
   404 ;;		None
   405 ;; Auto vars:     Size  Location     Type
   406 ;;  i               2    0[COMRAM] int 
   407 ;; Return value:  Size  Location     Type
   408 ;;		None               void
   409 ;; Registers used:
   410 ;;		wreg, status,2, status,0
   411 ;; Tracked objects:
   412 ;;		On entry : 0/0
   413 ;;		On exit  : 0/0
   414 ;;		Unchanged: 0/0
   415 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   416 ;;      Params:         0       0       0       0       0       0       0       0       0
   417 ;;      Locals:         2       0       0       0       0       0       0       0       0
   418 ;;      Temps:          0       0       0       0       0       0       0       0       0
   419 ;;      Totals:         2       0       0       0       0       0       0       0       0
   420 ;;Total ram usage:        2 bytes
   421 ;; Hardware stack levels used:    1
   422 ;; This function calls:
   423 ;;		Nothing
   424 ;; This function is called by:
   425 ;;		_send_instruction
   426 ;;		_send_data
   427 ;; This function uses a non-reentrant model
   428 ;;
   429                           
   430                           	psect	text3
   431  0008B6                     __ptext3:
   432                           	opt stack 0
   433  0008B6                     _delay:
   434                           	opt stack 29
   435                           
   436                           ;lcd.c: 9: int i;
   437                           ;lcd.c: 10: for(i=0;i<10000;i++);
   438                           
   439                           ;incstack = 0
   440  0008B6  0E00               	movlw	0
   441  0008B8  6E06               	movwf	delay@i+1,c
   442  0008BA  0E00               	movlw	0
   443  0008BC  6E05               	movwf	delay@i,c
   444  0008BE  5006               	movf	delay@i+1,w,c
   445  0008C0  0A80               	xorlw	128
   446  0008C2  0F59               	addlw	-167
   447  0008C4  0E10               	movlw	16
   448  0008C6  B4D8               	btfsc	status,2,c
   449  0008C8  5C05               	subwf	delay@i,w,c
   450  0008CA  B0D8               	btfsc	status,0,c
   451  0008CC  D003               	goto	l17
   452  0008CE  4A05               	infsnz	delay@i,f,c
   453  0008D0  2A06               	incf	delay@i+1,f,c
   454  0008D2  D7F5               	goto	L1
   455  0008D4                     l17:
   456  0008D4  0012               	return	
   457  0008D6                     __end_of_delay:
   458                           	opt stack 0
   459                           tblptru	equ	0xFF8
   460                           tblptrh	equ	0xFF7
   461                           tblptrl	equ	0xFF6
   462                           tablat	equ	0xFF5
   463                           postinc0	equ	0xFEE
   464                           wreg	equ	0xFE8
   465                           postdec1	equ	0xFE5
   466                           fsr1l	equ	0xFE1
   467                           status	equ	0xFD8
   468                           tblptru	equ	0xFF8
   469                           tblptrh	equ	0xFF7
   470                           tblptrl	equ	0xFF6
   471                           tablat	equ	0xFF5
   472                           postinc0	equ	0xFEE
   473                           wreg	equ	0xFE8
   474                           postdec1	equ	0xFE5
   475                           fsr1l	equ	0xFE1
   476                           status	equ	0xFD8
   477                           
   478                           	psect	rparam
   479  0000                     tblptru	equ	0xFF8
   480                           tblptrh	equ	0xFF7
   481                           tblptrl	equ	0xFF6
   482                           tablat	equ	0xFF5
   483                           postinc0	equ	0xFEE
   484                           wreg	equ	0xFE8
   485                           postdec1	equ	0xFE5
   486                           fsr1l	equ	0xFE1
   487                           status	equ	0xFD8


Data Sizes:
    Strings     12
    Constant    0
    Data        4
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      3       7
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    string2	PTR unsigned char  size(2) Largest target is 5
		 -> STR_2(CODE[5]), 

    string1	PTR unsigned char  size(2) Largest target is 7
		 -> STR_1(CODE[7]), 


Critical Paths under _main in COMRAM

    _main->_send_data
    _main->_send_instruction
    _send_instruction->_delay
    _send_data->_delay

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0      90
                          _send_data
                   _send_instruction
 ---------------------------------------------------------------------------------
 (1) _send_instruction                                     1     1      0      45
                                              2 COMRAM     1     1      0
                              _delay
 ---------------------------------------------------------------------------------
 (1) _send_data                                            1     1      0      45
                                              2 COMRAM     1     1      0
                              _delay
 ---------------------------------------------------------------------------------
 (2) _delay                                                2     2      0      30
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _send_data
     _delay
   _send_instruction
     _delay

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      3       7       1        7.4%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0       7      20        0.0%
DATA                 0      0       7       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.30 build 55553 
Symbol Table                                                                                   Mon Jun 05 10:02:14 2023

                       l17 08D4                        l662 0836                        l672 0872  
                      l666 084A                        l668 085E                        wreg 000FE8  
                     STR_1 0801                       STR_2 0808                       _main 080E  
                     fsr1l 000FE1                       start 0000                      ?_main 0005  
                    _PORTB 000F81                      _TRISB 000F93                      _delay 08B6  
                    tablat 000FF5                      status 000FD8           _send_instruction 08D6  
          __initialization 0888               __end_of_main 0888                     ??_main 0008  
            __activetblptr 000001                     ?_delay 0005                     delay@i 0005  
             __pdataCOMRAM 0001               __mediumconst 0000                     tblptrh 000FF7  
                   tblptrl 000FF6                     tblptru 000FF8                 __accesstop 0060  
  __end_of__initialization 08A8             __pcstackCOMRAM 0005              __end_of_delay 08D6  
                  ??_delay 0005         __size_of_send_data 0014   __end_of_send_instruction 08EA  
                  __Hparam 0000                    __Lparam 0000               __psmallconst 0800  
                  __pcinit 0888                    __ramtop 0800                    __ptext0 080E  
                  __ptext1 08D6                    __ptext2 08EA                    __ptext3 08B6  
                  _string1 0001                    _string2 0003       end_of_initialization 08A8  
        __end_of_send_data 08FE                    postdec1 000FE5                    postinc0 000FEE  
            send_data@data 0007                  _TRISCbits 000F94              __pidataCOMRAM 08FE  
      start_initialization 0888          ?_send_instruction 0005        __end_of__stringdata 080D  
       ??_send_instruction 0007                __smallconst 0800             __size_of_delay 0020  
                 _LATCbits 000F8B                  _send_data 08EA                __stringdata 0801  
                copy_data0 089C                 ?_send_data 0005                   __Hrparam 0000  
                 __Lrparam 0000               __Lsmallconst 0800              __size_of_main 007A  
  send_instruction@command 0007                ??_send_data 0007  __size_of_send_instruction 0014  
